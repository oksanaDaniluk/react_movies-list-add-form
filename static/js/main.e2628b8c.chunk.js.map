{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","urlIsValid","handleChange","target","name","value","setState","submitHandler","evt","preventDefault","pattern","isError","test","props","addMovie","this","onSubmit","htmlFor","id","type","placeholder","onChange","required","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"oxEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCvBGK,EAAb,2MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRG,YAAY,GAPhB,EAUEC,aAAe,YAAiB,IAAD,EAAbC,EAAa,EAAbA,OACRC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,EAAKC,UAAL,mBACGF,EAAOC,GADV,4BAEc,GAFd,KAbJ,EAmBEE,cAAgB,SAACC,GACfA,EAAIC,iBADmB,MAEiC,EAAKT,MAArDhB,EAFe,EAEfA,MAAOC,EAFQ,EAERA,YAAaC,EAFL,EAEKA,OAAQC,EAFb,EAEaA,QAASW,EAFtB,EAEsBA,OAEvCY,EAAU,qKACZC,GAAU,EAERD,EAAQE,KAAK1B,IAAcwB,EAAQE,KAAKzB,KAC5CwB,GAAU,EACV,EAAKL,SAAS,CACZL,YAAY,KAIXU,IACH,EAAKE,MAAMC,SAAS,CAClB9B,QACAC,cACAC,SACAC,UACAW,WAGF,EAAKQ,SAAS,CACZtB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,OA/ChB,wEAoDY,IAAD,EAMUiB,KAAKf,MALdhB,EADD,EACCA,MACNC,EAFK,EAELA,YACAC,EAHK,EAGLA,OACAC,EAJK,EAILA,QACAW,EALK,EAKLA,OACAG,EANK,EAMLA,WAEF,OACE,0BACEb,UAAU,OACV4B,SAAUD,KAAKR,eAEf,2BACE,2BAAOU,QAAQ,SAAf,UAGA,2BACEC,GAAG,QACHC,KAAK,OACLf,KAAK,QACLC,MAAOrB,EACPoC,YAAY,cACZC,SAAUN,KAAKb,aACfoB,UAAQ,KAIZ,2BACE,2BAAOL,QAAQ,cAAf,gBAGA,2BACEC,GAAG,cACHC,KAAK,OACLf,KAAK,cACLC,MAAOpB,EACPmC,YAAY,oBACZC,SAAUN,KAAKb,gBAInB,2BACE,2BAAOe,QAAQ,UAAf,cACA,2BACEC,GAAG,SACHC,KAAK,OACLf,KAAK,SACLhB,UAAU,cACViB,MAAOnB,EACPkC,YAAY,kBACZC,SAAUN,KAAKb,aACfoB,UAAQ,IAERrB,GAAgB,oDAGpB,2BACE,2BAAOgB,QAAQ,WAAf,aAGA,2BACEC,GAAG,UACHC,KAAK,OACLf,KAAK,UACLhB,UAAU,cACViB,MAAOlB,EACPiC,YAAY,iBACZC,SAAUN,KAAKb,aACfoB,UAAQ,IAERrB,GAAgB,oDAGpB,2BACE,2BAAOgB,QAAQ,WAAf,YAGA,2BACEC,GAAG,UACHC,KAAK,OACLf,KAAK,SACLC,MAAOP,EACPsB,YAAY,gBACZC,SAAUN,KAAKb,aACfoB,UAAQ,KAGZ,4BACEH,KAAK,UADP,kBA5IR,GAA8BI,a,OCGjBC,EAAb,2MACExB,MAAQ,CACNN,OAAQ+B,GAFZ,EAKEX,SAAW,SAAClB,GACV,EAAKU,UAAS,SAAAoB,GAAS,MAAK,CAC1BhC,OAAO,GAAD,mBAAMgC,EAAUhC,QAAhB,CAAwB,CAAEE,gBAPtC,wEAWY,IACAF,EAAWqB,KAAKf,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAU0B,SAAUC,KAAKD,iBApBnC,GAAyBS,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e2628b8c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    urlIsValid: false,\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({\n      [name]: value,\n      urlIsValid: false,\n    });\n  }\n\n  submitHandler = (evt) => {\n    evt.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    let isError = false;\n\n    if ((!pattern.test(imgUrl)) || (!pattern.test(imdbUrl))) {\n      isError = true;\n      this.setState({\n        urlIsValid: true,\n      });\n    }\n\n    if (!isError) {\n      this.props.addMovie({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  }\n\n  render() {\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      urlIsValid } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.submitHandler}\n      >\n        <p>\n          <label htmlFor=\"title\">\n            Title:\n          </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            placeholder=\"Enter title\"\n            onChange={this.handleChange}\n            required\n          />\n        </p>\n\n        <p>\n          <label htmlFor=\"decription\">\n            Description:\n          </label>\n          <input\n            id=\"description\"\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            placeholder=\"Enter description\"\n            onChange={this.handleChange}\n          />\n        </p>\n\n        <p>\n          <label htmlFor=\"imgUrl\">Image URL:</label>\n          <input\n            id=\"imgUrl\"\n            type=\"text\"\n            name=\"imgUrl\"\n            className=\"form__input\"\n            value={imgUrl}\n            placeholder=\"Enter image URL\"\n            onChange={this.handleChange}\n            required\n          />\n          {(urlIsValid) && (<span>Enter correct URL</span>)}\n        </p>\n\n        <p>\n          <label htmlFor=\"imdbUrl\">\n            IMDb URL:\n          </label>\n          <input\n            id=\"imdbUrl\"\n            type=\"text\"\n            name=\"imdbUrl\"\n            className=\"form__input\"\n            value={imdbUrl}\n            placeholder=\"Enter IMDb URL\"\n            onChange={this.handleChange}\n            required\n          />\n          {(urlIsValid) && (<span>Enter correct URL</span>)}\n        </p>\n\n        <p>\n          <label htmlFor=\"imdb-id\">\n            IMDb ID:\n          </label>\n          <input\n            id=\"imdb-id\"\n            type=\"text\"\n            name=\"imdbId\"\n            value={imdbId}\n            placeholder=\"Enter IMDb ID\"\n            onChange={this.handleChange}\n            required\n          />\n        </p>\n        <button\n          type=\"submit\"\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, { movie }],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}